---
# tasks file for k8s-users

- name: Check if Role is defined
  fail:
    msg: "Se debe especificar el ClusterRole existente mediante la variable 'user_to_role.role'."
  when: item.role is not defined
  loop: "{{ user_to_role }}"

- name: Check for Role type
  fail: 
    msg: "Valores permitidos para la variable user_to_role.role: {{ allowed_roles | join(', ') }}"
  when: item.role not in allowed_roles
  loop: "{{ user_to_role }}"

- name: Check if User is defined
  fail:
    msg: "Se debe especificar el usuario a agregar a el ClusterRole existente mediante la variable 'user_to_role.user'."
  when: item.user is not defined
  loop: "{{ user_to_role }}"

- name: Create namespace
  k8s:
    state: present
    name: "{{ item.namespace }}"
    namespace: "{{ item.namespace }}"
    kind: Namespace
    api_version: v1
  when: item.action == "create"
  loop: "{{ user_to_role }}"

- name: Create a service account
  k8s:
    state: present
    name: "{{ item.user }}"
    namespace: "{{ item.namespace }}"
    api_version: v1
    kind: ServiceAccount
  when: item.action == "create"
  loop: "{{ user_to_role }}"

- name: Create Role
  k8s:
    state: present
    definition: "{{ lookup('template', role_path + '/templates/user-role-k8s.yaml.j2' if item.role == 'admin' else role_path + '/templates/user-role-ro-k8s.yaml.j2') }}"
  when: item.action == "create"
  loop: "{{ user_to_role }}"

- name: User binding to Role
  k8s:
    state: present
    definition: "{{ lookup('template', role_path + '/templates/binding-user-role.yaml.j2') }}"
